; MultiFunction set up file for Windows 95
; For Fax+Modem+Ethernet PC Cards
;
; Copyright (c) 1993-1995 Microsoft Corporation
; Copyright 1995, IBM NHD

[Version]
LayoutFile=layout.inf
Signature="$CHICAGO$"
Provider=%MS%
Class=MultiFunction

;
; Table of Contents
;
[Manufacturer]
%IBM%=IBM

[IBM]
;
; 14.4 Combo Cards
;
%fme144ibm%=fme144i.mf,PCMCIA\IBM-Home_and_Away_Credit_Card_Adapter-881A
%fme144ibm%=fme144i.mf,PCMCIA\IBM-w95_Home_and_Away_Credit_Card_-FD49                    ;x03 (new w95 mut)
;
%fme144oem%=fme144o.mf,PCMCIA\____________________-FAX/Modem/Ethernet_Combo_Card_-BD6E
%fme144oem%=fme144o.mf,PCMCIA\____________________-w95_FAX/Modem/Ethernet_Combo__-7F7D   ;x03 (new w95 mut)
;
;
; 28.8 Combo Cards
;
%fme288ibm%=fme288i.mf,PCMCIA\IBM-Home_and_Away_28.8_PC_Card_______-2DDB                 ;x03 (nonmut)
%fme288ibm%=fme288i.mf,PCMCIA\IBM-w95_Home_and_Away_28.8_PC_Card-1687                    ;x03 (new w95 mut)
;
%fme288oem%=fme288o.mf,PCMCIA\____________________-28.8_Modem-Ethernet_Combo_Card-6ABA   ;x03 (nonmut)
%fme288oem%=fme288o.mf,PCMCIA\____________________-w95_28.8_Modem-Ethernet_Combo_-D38E   ;x03 (new w95 mut)


;----- 14.4 versions -----

[fme144i.mf]
AddReg=StandardMF.Reg,ADDREG_IBM.reg
CopyFiles=fme.ndis3.CopyFiles,fme.netinf.CopyFiles                                       ;x05

[fme144i.mf.HW]
AddReg=fme144i.mf.RegHW

[fme144i.mf.RegHW]
HKR,Child0000,HardwareID,,MF\FME144I_DEV0
HKR,Child0000,ResourceMap,1,00,02
HKR,Child0001,HardwareID,,MF\FME144I_DEV1
HKR,Child0001,ResourceMap,1,00,01,02,03,04

;--oem

[fme144o.mf]
AddReg=StandardMF.Reg,ADDREG_IBM.reg
CopyFiles=fme.ndis3.CopyFiles,fme.netinf.CopyFiles                                       ;x05

[fme144o.mf.HW]
AddReg=fme144o.mf.RegHW

[fme144o.mf.RegHW]
HKR,Child0000,HardwareID,,MF\FME144O_DEV0
HKR,Child0000,ResourceMap,1,00,02
HKR,Child0001,HardwareID,,MF\FME144O_DEV1
HKR,Child0001,ResourceMap,1,00,01,02,03,04


;----- 28.8 versions -----

[fme288i.mf]
AddReg=StandardMF.Reg,ADDREG_IBM.reg
CopyFiles=fme.ndis3.CopyFiles,fme.netinf.CopyFiles                                       ;x05

[fme288i.mf.HW]
AddReg=fme288i.mf.RegHW

[fme288i.mf.RegHW]
HKR,Child0000,HardwareID,,MF\FME288I_DEV0
HKR,Child0000,ResourceMap,1,00,02
HKR,Child0001,HardwareID,,MF\FME288I_DEV1
HKR,Child0001,ResourceMap,1,00,01,02,03,04

;--oem

[fme288o.mf]
AddReg=StandardMF.Reg,ADDREG_IBM.reg
CopyFiles=fme.ndis3.CopyFiles,fme.netinf.CopyFiles                                       ;x05

[fme288o.mf.HW]
AddReg=fme288o.mf.RegHW

[fme288o.mf.RegHW]
HKR,Child0000,HardwareID,,MF\FME288O_DEV0
HKR,Child0000,ResourceMap,1,00,02
HKR,Child0001,HardwareID,,MF\FME288O_DEV1
HKR,Child0001,ResourceMap,1,00,01,02,03,04


;----- common sections -----

[StandardMF.Reg]
HKR,,DevLoader,,*CONFIGMG
HKR,,Enumerator,,*CONFIGMG
HKR,,CMDrivFlags,1,03,00,00,00

[ADDREG_IBM.reg]
;
; OVERRIDE for COM2
;
HKR,Override,0000,1, \
;
; CONFIGMG_VERSION
;
00,04,00,00, \
;
; PRIORITY
;
00,30,00,00, \
;
;
; OVERRIDE for COM2
;
; I/O Resource Descriptor 0: COM port
;
24,00,00,00, \ ; Total length of I/O Resource Descriptor
02,00,00,00, \ ; ResType_IO = 0x00000002
01,00, \       ; IOD_Count;
0C,00, \       ; IOD_Type;         // IOType_Range = 0x000C
00,00, \       ; IOD_Alloc_Base;
00,00, \       ; IOD_Alloc_End;
00,00, \       ; IOD_DesFlags;
00, \          ; IOD_Alloc_Alias;
00, \          ; IOD_Alloc_Decode;
F8,FF, \       ; IOR_Align;        // Mask for base alignment E0/F0
08,00, \       ; IOR_nPorts;       // Number of ports, pony=10
F8,02, \       ; IOR_Min;          // Min port address
FF,02, \       ; IOR_Max;          // Max port address
00,00, \       ; IOR_RangeFlags;   // Flags
00, \          ; IOR_Alias;        // Alias offset
00, \          ; IOR_Decode;       // Address specified
64,00,00,00, \ ; PCCARD flags, 0x40 = 16-bit port
;
; I/O Resource Descriptor 1 : nice port
;
24,00,00,00, \ ; Total length of I/O Resource Descriptor
02,00,00,00, \ ; ResType_IO = 0x00000002
01,00, \       ; IOD_Count;
0C,00, \       ; IOD_Type;         // IOType_Range = 0x000C
00,00, \       ; IOD_Alloc_Base;
00,00, \       ; IOD_Alloc_End;
00,00, \       ; IOD_DesFlags;
00, \          ; IOD_Alloc_Alias;
00, \          ; IOD_Alloc_Decode;
E0,FF, \       ; IOR_Align;        // Mask for base alignment E0/F0
20,00, \       ; IOR_nPorts;       // Number of ports, pony=10
00,01, \       ; IOR_Min;          // Min port address
FF,FF, \       ; IOR_Max;          // Max port address
00,00, \       ; IOR_RangeFlags;   // Flags
00, \          ; IOR_Alias;        // Alias offset
00, \          ; IOR_Decode;       // Address specified
64,00,00,00, \ ; PCCARD flags, 0x40 = 16-bit port
;
; IRQ Resource Descriptor
;
14,00,00,00, \ ; Total length of IRQ Resource Descriptor
04,00,00,00, \ ; ResType_IRQ = 0x00000004
00,00, \       ; IRQD_Flags;
00,00, \       ; IRQD_Alloc_Num;   // Allocated IRQ number
08,00, \       ; IRQD_Req_Mask;    // Mask of possible IRQs
00,00, \       ; IRQD_Reserved;
20,00,00,00, \ ; PCCARD flags, 0x20 = Level mode interrupts
;
; MEM Resource Descriptor 0
;
34,00,00,00, \ ; Total length of Memory Resource Descriptor
01,00,00,00, \ ; ResType_Mem = 0x00000001
01,00, \       ; MD_Count;
14,00, \       ; MD_Type;          // MType_Range = 0x0014
00,00,00,00, \ ; MD_Alloc_Base;
00,00,00,00, \ ; MD_Alloc_End;
00,00, \       ; MD_Flags;
00,00, \       ; MD_Reserved;
00,E0,FF,FF, \ ; MR_Align;         // Mask for base alignment
00,20,00,00, \ ; MR_nBytes;        // Count of bytes
00,00,00,00, \ ; MR_Min;      // Min Address
FF,FF,FF,FF, \ ; MR_Max;      // Max Address
00,00, \       ; MR_Flags;         // Flags
00,00, \       ; MR_Reserved;
02,00,00,00, \ ; PCCARD flags, 0x02 = attribute mem, or
               ;         0x08 = 16-bit common mem
00,00,00,00, \ ; Memory card address
;
; MEM Resource Descriptor 1
;
34,00,00,00, \ ; Total length of Memory Resource Descriptor
01,00,00,00, \ ; ResType_Mem = 0x00000001
01,00, \       ; MD_Count;
14,00, \       ; MD_Type;          // MType_Range = 0x0014
00,00,00,00, \ ; MD_Alloc_Base;
00,00,00,00, \ ; MD_Alloc_End;
00,00, \       ; MD_Flags;
00,00, \       ; MD_Reserved;
00,C0,FF,FF, \ ; MR_Align;         // Mask for base alignment
00,40,00,00, \ ; MR_nBytes;        // Count of bytes
00,00,00,00, \ ; MR_Min;      // Min Address
FF,FF,FF,FF, \ ; MR_Max;      // Max Address
00,00, \       ; MR_Flags;         // Flags
00,00, \       ; MR_Reserved;
08,00,00,00, \ ; PCCARD flags, 0x02 = attribute mem, or
               ;         0x08 = 16-bit common mem
00,40,00,00, \ ; Memory card address
;
; REQUEST_CONFIG_PKT Descriptor
;
19,00,00,00, \ ; Total length of REQUEST_CONFIG_PKT Descriptor
7C,89,00,00, \ ; (ResType_Ignored_Bit + PCCARD_DEVICE_ID) = 0x897C
00,00, \       ; Socket;
02,00, \       ; Attributes;
32, \          ; Vcc;
00, \          ; Vpp1; 78
00, \          ; Vpp2; 78
02, \          ; IntType;
40,10,00,00, \ ; ConfigBase;
00, \          ; Status;
00, \          ; Pin;
00, \          ; Copy;
41, \          ; ConfigIndex;
01, \          ; Present;
;
; TERMINATOR
;
00,00,00,00
;
;
; OVERRIDE for COM3
;
HKR,Override,0001,1, \
;
; CONFIGMG_VERSION
;
00,04,00,00, \
;
; PRIORITY
;
00,30,00,00, \
;
; I/O Resource Descriptor 0: COM port
;
24,00,00,00, \ ; Total length of I/O Resource Descriptor
02,00,00,00, \ ; ResType_IO = 0x00000002
01,00, \       ; IOD_Count;
0C,00, \       ; IOD_Type;         // IOType_Range = 0x000C
00,00, \       ; IOD_Alloc_Base;
00,00, \       ; IOD_Alloc_End;
00,00, \       ; IOD_DesFlags;
00, \          ; IOD_Alloc_Alias;
00, \          ; IOD_Alloc_Decode;
F8,FF, \       ; IOR_Align;        // Mask for base alignment E0/F0
08,00, \       ; IOR_nPorts;       // Number of ports, pony=10
E8,03, \       ; IOR_Min;          // Min port address
EF,03, \       ; IOR_Max;          // Max port address
00,00, \       ; IOR_RangeFlags;   // Flags
00, \          ; IOR_Alias;        // Alias offset
00, \          ; IOR_Decode;       // Address specified
64,00,00,00, \ ; PCCARD flags, 0x40 = 16-bit port
;
; I/O Resource Descriptor 1 : nice port
;
24,00,00,00, \ ; Total length of I/O Resource Descriptor
02,00,00,00, \ ; ResType_IO = 0x00000002
01,00, \       ; IOD_Count;
0C,00, \       ; IOD_Type;         // IOType_Range = 0x000C
00,00, \       ; IOD_Alloc_Base;
00,00, \       ; IOD_Alloc_End;
00,00, \       ; IOD_DesFlags;
00, \          ; IOD_Alloc_Alias;
00, \          ; IOD_Alloc_Decode;
E0,FF, \       ; IOR_Align;        // Mask for base alignment E0/F0
20,00, \       ; IOR_nPorts;       // Number of ports, pony=10
00,01, \       ; IOR_Min;          // Min port address
FF,FF, \       ; IOR_Max;          // Max port address
00,00, \       ; IOR_RangeFlags;   // Flags
00, \          ; IOR_Alias;        // Alias offset
00, \          ; IOR_Decode;       // Address specified
64,00,00,00, \ ; PCCARD flags, 0x40 = 16-bit port
;
; IRQ Resource Descriptor
;
14,00,00,00, \ ; Total length of IRQ Resource Descriptor
04,00,00,00, \ ; ResType_IRQ = 0x00000004
00,00, \       ; IRQD_Flags;
00,00, \       ; IRQD_Alloc_Num;   // Allocated IRQ number
10,00, \       ; IRQD_Req_Mask;    // Mask of possible IRQs
00,00, \       ; IRQD_Reserved;
20,00,00,00, \ ; PCCARD flags, 0x20 = Level mode interrupts
;
; MEM Resource Descriptor 0
;
34,00,00,00, \ ; Total length of Memory Resource Descriptor
01,00,00,00, \ ; ResType_Mem = 0x00000001
01,00, \       ; MD_Count;
14,00, \       ; MD_Type;          // MType_Range = 0x0014
00,00,00,00, \ ; MD_Alloc_Base;
00,00,00,00, \ ; MD_Alloc_End;
00,00, \       ; MD_Flags;
00,00, \       ; MD_Reserved;
00,E0,FF,FF, \ ; MR_Align;         // Mask for base alignment
00,20,00,00, \ ; MR_nBytes;        // Count of bytes
00,00,00,00, \ ; MR_Min;      // Min Address
FF,FF,FF,FF, \ ; MR_Max;      // Max Address
00,00, \       ; MR_Flags;         // Flags
00,00, \       ; MR_Reserved;
02,00,00,00, \ ; PCCARD flags, 0x02 = attribute mem, or
               ;         0x08 = 16-bit common mem
00,00,00,00, \ ; Memory card address
;
; MEM Resource Descriptor 1
;
34,00,00,00, \ ; Total length of Memory Resource Descriptor
01,00,00,00, \ ; ResType_Mem = 0x00000001
01,00, \       ; MD_Count;
14,00, \       ; MD_Type;          // MType_Range = 0x0014
00,00,00,00, \ ; MD_Alloc_Base;
00,00,00,00, \ ; MD_Alloc_End;
00,00, \       ; MD_Flags;
00,00, \       ; MD_Reserved;
00,C0,FF,FF, \ ; MR_Align;         // Mask for base alignment
00,40,00,00, \ ; MR_nBytes;        // Count of bytes
00,00,00,00, \ ; MR_Min;      // Min Address
FF,FF,FF,FF, \ ; MR_Max;      // Max Address
00,00, \       ; MR_Flags;         // Flags
00,00, \       ; MR_Reserved;
08,00,00,00, \ ; PCCARD flags, 0x02 = attribute mem, or
               ;         0x08 = 16-bit common mem
00,40,00,00, \ ; Memory card address
;
; REQUEST_CONFIG_PKT Descriptor
;
19,00,00,00, \ ; Total length of REQUEST_CONFIG_PKT Descriptor
7C,89,00,00, \ ; (ResType_Ignored_Bit + PCCARD_DEVICE_ID) = 0x897C
00,00, \       ; Socket;
02,00, \       ; Attributes;
32, \          ; Vcc;
00, \          ; Vpp1; 78
00, \          ; Vpp2; 78
02, \          ; IntType;
40,10,00,00, \ ; ConfigBase;
00, \          ; Status;
00, \          ; Pin;
00, \          ; Copy;
61, \          ; ConfigIndex;
01, \          ; Present;
;
; TERMINATOR
;
00,00,00,00
;
;
; OVERRIDE for COM4
;
HKR,Override,0002,1, \
;
; CONFIGMG_VERSION
;
00,04,00,00, \
;
; PRIORITY
;
00,30,00,00, \
;
; I/O Resource Descriptor 0: COM port
;
24,00,00,00, \ ; Total length of I/O Resource Descriptor
02,00,00,00, \ ; ResType_IO = 0x00000002
01,00, \       ; IOD_Count;
0C,00, \       ; IOD_Type;         // IOType_Range = 0x000C
00,00, \       ; IOD_Alloc_Base;
00,00, \       ; IOD_Alloc_End;
00,00, \       ; IOD_DesFlags;
00, \          ; IOD_Alloc_Alias;
00, \          ; IOD_Alloc_Decode;
F8,FF, \       ; IOR_Align;        // Mask for base alignment E0/F0
08,00, \       ; IOR_nPorts;       // Number of ports, pony=10
E8,02, \       ; IOR_Min;          // Min port address
EF,02, \       ; IOR_Max;          // Max port address
00,00, \       ; IOR_RangeFlags;   // Flags
00, \          ; IOR_Alias;        // Alias offset
00, \          ; IOR_Decode;       // Address specified
64,00,00,00, \ ; PCCARD flags, 0x40 = 16-bit port
;
; I/O Resource Descriptor 1 : nice port
;
24,00,00,00, \ ; Total length of I/O Resource Descriptor
02,00,00,00, \ ; ResType_IO = 0x00000002
01,00, \       ; IOD_Count;
0C,00, \       ; IOD_Type;         // IOType_Range = 0x000C
00,00, \       ; IOD_Alloc_Base;
00,00, \       ; IOD_Alloc_End;
00,00, \       ; IOD_DesFlags;
00, \          ; IOD_Alloc_Alias;
00, \          ; IOD_Alloc_Decode;
E0,FF, \       ; IOR_Align;        // Mask for base alignment E0/F0
20,00, \       ; IOR_nPorts;       // Number of ports, pony=10
00,01, \       ; IOR_Min;          // Min port address
FF,FF, \       ; IOR_Max;          // Max port address
00,00, \       ; IOR_RangeFlags;   // Flags
00, \          ; IOR_Alias;        // Alias offset
00, \          ; IOR_Decode;       // Address specified
64,00,00,00, \ ; PCCARD flags, 0x40 = 16-bit port
;
; IRQ Resource Descriptor
;
14,00,00,00, \ ; Total length of IRQ Resource Descriptor
04,00,00,00, \ ; ResType_IRQ = 0x00000004
00,00, \       ; IRQD_Flags;
00,00, \       ; IRQD_Alloc_Num;   // Allocated IRQ number
08,00, \       ; IRQD_Req_Mask;    // Mask of possible IRQs
00,00, \       ; IRQD_Reserved;
20,00,00,00, \ ; PCCARD flags, 0x20 = Level mode interrupts
;
; MEM Resource Descriptor 0
;
34,00,00,00, \ ; Total length of Memory Resource Descriptor
01,00,00,00, \ ; ResType_Mem = 0x00000001
01,00, \       ; MD_Count;
14,00, \       ; MD_Type;          // MType_Range = 0x0014
00,00,00,00, \ ; MD_Alloc_Base;
00,00,00,00, \ ; MD_Alloc_End;
00,00, \       ; MD_Flags;
00,00, \       ; MD_Reserved;
00,E0,FF,FF, \ ; MR_Align;         // Mask for base alignment
00,20,00,00, \ ; MR_nBytes;        // Count of bytes
00,00,00,00, \ ; MR_Min;      // Min Address
FF,FF,FF,FF, \ ; MR_Max;      // Max Address
00,00, \       ; MR_Flags;         // Flags
00,00, \       ; MR_Reserved;
02,00,00,00, \ ; PCCARD flags, 0x02 = attribute mem, or
               ;         0x08 = 16-bit common mem
00,00,00,00, \ ; Memory card address
;
; MEM Resource Descriptor 1
;
34,00,00,00, \ ; Total length of Memory Resource Descriptor
01,00,00,00, \ ; ResType_Mem = 0x00000001
01,00, \       ; MD_Count;
14,00, \       ; MD_Type;          // MType_Range = 0x0014
00,00,00,00, \ ; MD_Alloc_Base;
00,00,00,00, \ ; MD_Alloc_End;
00,00, \       ; MD_Flags;
00,00, \       ; MD_Reserved;
00,C0,FF,FF, \ ; MR_Align;         // Mask for base alignment
00,40,00,00, \ ; MR_nBytes;        // Count of bytes
00,00,00,00, \ ; MR_Min;      // Min Address
FF,FF,FF,FF, \ ; MR_Max;      // Max Address
00,00, \       ; MR_Flags;         // Flags
00,00, \       ; MR_Reserved;
08,00,00,00, \ ; PCCARD flags, 0x02 = attribute mem, or
               ;         0x08 = 16-bit common mem
00,40,00,00, \ ; Memory card address
;
; REQUEST_CONFIG_PKT Descriptor
;
19,00,00,00, \ ; Total length of REQUEST_CONFIG_PKT Descriptor
7C,89,00,00, \ ; (ResType_Ignored_Bit + PCCARD_DEVICE_ID) = 0x897C
00,00, \       ; Socket;
02,00, \       ; Attributes;
32, \          ; Vcc;
00, \          ; Vpp1; 78
00, \          ; Vpp2; 78
02, \          ; IntType;
40,10,00,00, \ ; ConfigBase;
00, \          ; Status;
00, \          ; Pin;
00, \          ; Copy;
61, \          ; ConfigIndex;
01, \          ; Present;
;
; TERMINATOR
;
00,00,00,00
;
;
;
; OVERRIDE for COM1
;
HKR,Override,0003,1, \
;
; CONFIGMG_VERSION
;
00,04,00,00, \
;
; PRIORITY
;
00,30,00,00, \
;
; I/O Resource Descriptor 0: COM port
;
24,00,00,00, \ ; Total length of I/O Resource Descriptor
02,00,00,00, \ ; ResType_IO = 0x00000002
01,00, \       ; IOD_Count;
0C,00, \       ; IOD_Type;         // IOType_Range = 0x000C
00,00, \       ; IOD_Alloc_Base;
00,00, \       ; IOD_Alloc_End;
00,00, \       ; IOD_DesFlags;
00, \          ; IOD_Alloc_Alias;
00, \          ; IOD_Alloc_Decode;
F8,FF, \       ; IOR_Align;        // Mask for base alignment E0/F0
08,00, \       ; IOR_nPorts;       // Number of ports, pony=10
F8,03, \       ; IOR_Min;          // Min port address
FF,03, \       ; IOR_Max;          // Max port address
00,00, \       ; IOR_RangeFlags;   // Flags
00, \          ; IOR_Alias;        // Alias offset
00, \          ; IOR_Decode;       // Address specified
64,00,00,00, \ ; PCCARD flags, 0x40 = 16-bit port
;
; I/O Resource Descriptor 1 : nice port
;
24,00,00,00, \ ; Total length of I/O Resource Descriptor
02,00,00,00, \ ; ResType_IO = 0x00000002
01,00, \       ; IOD_Count;
0C,00, \       ; IOD_Type;         // IOType_Range = 0x000C
00,00, \       ; IOD_Alloc_Base;
00,00, \       ; IOD_Alloc_End;
00,00, \       ; IOD_DesFlags;
00, \          ; IOD_Alloc_Alias;
00, \          ; IOD_Alloc_Decode;
E0,FF, \       ; IOR_Align;        // Mask for base alignment E0/F0
20,00, \       ; IOR_nPorts;       // Number of ports, pony=10
00,01, \       ; IOR_Min;          // Min port address
FF,FF, \       ; IOR_Max;          // Max port address
00,00, \       ; IOR_RangeFlags;   // Flags
00, \          ; IOR_Alias;        // Alias offset
00, \          ; IOR_Decode;       // Address specified
64,00,00,00, \ ; PCCARD flags, 0x40 = 16-bit port
;
; IRQ Resource Descriptor
;
14,00,00,00, \ ; Total length of IRQ Resource Descriptor
04,00,00,00, \ ; ResType_IRQ = 0x00000004
00,00, \       ; IRQD_Flags;
00,00, \       ; IRQD_Alloc_Num;   // Allocated IRQ number
10,00, \       ; IRQD_Req_Mask;    // Mask of possible IRQs
00,00, \       ; IRQD_Reserved;
20,00,00,00, \ ; PCCARD flags, 0x20 = Level mode interrupts
;
; MEM Resource Descriptor 0
;
34,00,00,00, \ ; Total length of Memory Resource Descriptor
01,00,00,00, \ ; ResType_Mem = 0x00000001
01,00, \       ; MD_Count;
14,00, \       ; MD_Type;          // MType_Range = 0x0014
00,00,00,00, \ ; MD_Alloc_Base;
00,00,00,00, \ ; MD_Alloc_End;
00,00, \       ; MD_Flags;
00,00, \       ; MD_Reserved;
00,E0,FF,FF, \ ; MR_Align;         // Mask for base alignment
00,20,00,00, \ ; MR_nBytes;        // Count of bytes
00,00,00,00, \ ; MR_Min;      // Min Address
FF,FF,FF,FF, \ ; MR_Max;      // Max Address
00,00, \       ; MR_Flags;         // Flags
00,00, \       ; MR_Reserved;
02,00,00,00, \ ; PCCARD flags, 0x02 = attribute mem, or
               ;         0x08 = 16-bit common mem
00,00,00,00, \ ; Memory card address
;
; MEM Resource Descriptor 1
;
34,00,00,00, \ ; Total length of Memory Resource Descriptor
01,00,00,00, \ ; ResType_Mem = 0x00000001
01,00, \       ; MD_Count;
14,00, \       ; MD_Type;          // MType_Range = 0x0014
00,00,00,00, \ ; MD_Alloc_Base;
00,00,00,00, \ ; MD_Alloc_End;
00,00, \       ; MD_Flags;
00,00, \       ; MD_Reserved;
00,C0,FF,FF, \ ; MR_Align;         // Mask for base alignment
00,40,00,00, \ ; MR_nBytes;        // Count of bytes
00,00,00,00, \ ; MR_Min;      // Min Address
FF,FF,FF,FF, \ ; MR_Max;      // Max Address
00,00, \       ; MR_Flags;         // Flags
00,00, \       ; MR_Reserved;
08,00,00,00, \ ; PCCARD flags, 0x02 = attribute mem, or
               ;         0x08 = 16-bit common mem
00,40,00,00, \ ; Memory card address
;
; REQUEST_CONFIG_PKT Descriptor
;
19,00,00,00, \ ; Total length of REQUEST_CONFIG_PKT Descriptor
7C,89,00,00, \ ; (ResType_Ignored_Bit + PCCARD_DEVICE_ID) = 0x897C
00,00, \       ; Socket;
02,00, \       ; Attributes;
32, \          ; Vcc;
00, \          ; Vpp1; 78
00, \          ; Vpp2; 78
02, \          ; IntType;
40,10,00,00, \ ; ConfigBase;
00, \          ; Status;
00, \          ; Pin;
00, \          ; Copy;
41, \          ; ConfigIndex;
01, \          ; Present;
;
; TERMINATOR
;
00,00,00,00
;
;
;
HKR,Override,0004,1, \
;
; CONFIGMG_VERSION
;
00,04,00,00, \
;
; PRIORITY
;
00,30,00,00, \                                                       ; x04
;
;
; OVERRIDE for COM2
;
; I/O Resource Descriptor 0: COM port
;
24,00,00,00, \ ; Total length of I/O Resource Descriptor
02,00,00,00, \ ; ResType_IO = 0x00000002
01,00, \       ; IOD_Count;
0C,00, \       ; IOD_Type;         // IOType_Range = 0x000C
00,00, \       ; IOD_Alloc_Base;
00,00, \       ; IOD_Alloc_End;
00,00, \       ; IOD_DesFlags;
00, \          ; IOD_Alloc_Alias;
00, \          ; IOD_Alloc_Decode;
F8,FF, \       ; IOR_Align;        // Mask for base alignment E0/F0
08,00, \       ; IOR_nPorts;       // Number of ports, pony=10
F8,02, \       ; IOR_Min;          // Min port address
FF,02, \       ; IOR_Max;          // Max port address
00,00, \       ; IOR_RangeFlags;   // Flags
00, \          ; IOR_Alias;        // Alias offset
00, \          ; IOR_Decode;       // Address specified
64,00,00,00, \ ; PCCARD flags, 0x40 = 16-bit port
;
; I/O Resource Descriptor 1 : nice port
;
24,00,00,00, \ ; Total length of I/O Resource Descriptor
02,00,00,00, \ ; ResType_IO = 0x00000002
01,00, \       ; IOD_Count;
0C,00, \       ; IOD_Type;         // IOType_Range = 0x000C
00,00, \       ; IOD_Alloc_Base;
00,00, \       ; IOD_Alloc_End;
00,00, \       ; IOD_DesFlags;
00, \          ; IOD_Alloc_Alias;
00, \          ; IOD_Alloc_Decode;
E0,FF, \       ; IOR_Align;        // Mask for base alignment E0/F0
20,00, \       ; IOR_nPorts;       // Number of ports, pony=10
00,01, \       ; IOR_Min;          // Min port address
FF,FF, \       ; IOR_Max;          // Max port address
00,00, \       ; IOR_RangeFlags;   // Flags
00, \          ; IOR_Alias;        // Alias offset
00, \          ; IOR_Decode;       // Address specified
64,00,00,00, \ ; PCCARD flags, 0x40 = 16-bit port
;
; IRQ Resource Descriptor
;
14,00,00,00, \ ; Total length of IRQ Resource Descriptor
04,00,00,00, \ ; ResType_IRQ = 0x00000004
00,00, \       ; IRQD_Flags;
00,00, \       ; IRQD_Alloc_Num;   // Allocated IRQ number
ff,ff, \       ; IRQD_Req_Mask;    // Mask of possible IRQs
00,00, \       ; IRQD_Reserved;
20,00,00,00, \ ; PCCARD flags, 0x20 = Level mode interrupts
;
; MEM Resource Descriptor 0
;
34,00,00,00, \ ; Total length of Memory Resource Descriptor
01,00,00,00, \ ; ResType_Mem = 0x00000001
01,00, \       ; MD_Count;
14,00, \       ; MD_Type;          // MType_Range = 0x0014
00,00,00,00, \ ; MD_Alloc_Base;
00,00,00,00, \ ; MD_Alloc_End;
00,00, \       ; MD_Flags;
00,00, \       ; MD_Reserved;
00,E0,FF,FF, \ ; MR_Align;         // Mask for base alignment
00,20,00,00, \ ; MR_nBytes;        // Count of bytes
00,00,00,00, \ ; MR_Min;      // Min Address
FF,FF,FF,FF, \ ; MR_Max;      // Max Address
00,00, \       ; MR_Flags;         // Flags
00,00, \       ; MR_Reserved;
02,00,00,00, \ ; PCCARD flags, 0x02 = attribute mem, or
               ;         0x08 = 16-bit common mem
00,00,00,00, \ ; Memory card address
;
; MEM Resource Descriptor 1
;
34,00,00,00, \ ; Total length of Memory Resource Descriptor
01,00,00,00, \ ; ResType_Mem = 0x00000001
01,00, \       ; MD_Count;
14,00, \       ; MD_Type;          // MType_Range = 0x0014
00,00,00,00, \ ; MD_Alloc_Base;
00,00,00,00, \ ; MD_Alloc_End;
00,00, \       ; MD_Flags;
00,00, \       ; MD_Reserved;
00,C0,FF,FF, \ ; MR_Align;         // Mask for base alignment
00,40,00,00, \ ; MR_nBytes;        // Count of bytes
00,00,00,00, \ ; MR_Min;      // Min Address
FF,FF,FF,FF, \ ; MR_Max;      // Max Address
00,00, \       ; MR_Flags;         // Flags
00,00, \       ; MR_Reserved;
08,00,00,00, \ ; PCCARD flags, 0x02 = attribute mem, or
               ;         0x08 = 16-bit common mem
00,40,00,00, \ ; Memory card address
;
; REQUEST_CONFIG_PKT Descriptor
;
19,00,00,00, \ ; Total length of REQUEST_CONFIG_PKT Descriptor
7C,89,00,00, \ ; (ResType_Ignored_Bit + PCCARD_DEVICE_ID) = 0x897C
00,00, \       ; Socket;
02,00, \       ; Attributes;
32, \          ; Vcc;
00, \          ; Vpp1; 78
00, \          ; Vpp2; 78
02, \          ; IntType;
40,10,00,00, \ ; ConfigBase;
00, \          ; Status;
00, \          ; Pin;
00, \          ; Copy;
41, \          ; ConfigIndex;
01, \          ; Present;
;
; TERMINATOR
;
00,00,00,00
;
;
; OVERRIDE for COM3
;
HKR,Override,0005,1, \
;
; CONFIGMG_VERSION
;
00,04,00,00, \
;
; PRIORITY
;
00,30,00,00, \                                                  ; x04
;
; I/O Resource Descriptor 0: COM port
;
24,00,00,00, \ ; Total length of I/O Resource Descriptor
02,00,00,00, \ ; ResType_IO = 0x00000002
01,00, \       ; IOD_Count;
0C,00, \       ; IOD_Type;         // IOType_Range = 0x000C
00,00, \       ; IOD_Alloc_Base;
00,00, \       ; IOD_Alloc_End;
00,00, \       ; IOD_DesFlags;
00, \          ; IOD_Alloc_Alias;
00, \          ; IOD_Alloc_Decode;
F8,FF, \       ; IOR_Align;        // Mask for base alignment E0/F0
08,00, \       ; IOR_nPorts;       // Number of ports, pony=10
E8,03, \       ; IOR_Min;          // Min port address
EF,03, \       ; IOR_Max;          // Max port address
00,00, \       ; IOR_RangeFlags;   // Flags
00, \          ; IOR_Alias;        // Alias offset
00, \          ; IOR_Decode;       // Address specified
64,00,00,00, \ ; PCCARD flags, 0x40 = 16-bit port
;
; I/O Resource Descriptor 1 : nice port
;
24,00,00,00, \ ; Total length of I/O Resource Descriptor
02,00,00,00, \ ; ResType_IO = 0x00000002
01,00, \       ; IOD_Count;
0C,00, \       ; IOD_Type;         // IOType_Range = 0x000C
00,00, \       ; IOD_Alloc_Base;
00,00, \       ; IOD_Alloc_End;
00,00, \       ; IOD_DesFlags;
00, \          ; IOD_Alloc_Alias;
00, \          ; IOD_Alloc_Decode;
E0,FF, \       ; IOR_Align;        // Mask for base alignment E0/F0
20,00, \       ; IOR_nPorts;       // Number of ports, pony=10
00,01, \       ; IOR_Min;          // Min port address
FF,FF, \       ; IOR_Max;          // Max port address
00,00, \       ; IOR_RangeFlags;   // Flags
00, \          ; IOR_Alias;        // Alias offset
00, \          ; IOR_Decode;       // Address specified
64,00,00,00, \ ; PCCARD flags, 0x40 = 16-bit port
;
; IRQ Resource Descriptor
;
14,00,00,00, \ ; Total length of IRQ Resource Descriptor
04,00,00,00, \ ; ResType_IRQ = 0x00000004
00,00, \       ; IRQD_Flags;
00,00, \       ; IRQD_Alloc_Num;   // Allocated IRQ number
ff,ff, \       ; IRQD_Req_Mask;    // Mask of possible IRQs
00,00, \       ; IRQD_Reserved;
20,00,00,00, \ ; PCCARD flags, 0x20 = Level mode interrupts
;
; MEM Resource Descriptor 0
;
34,00,00,00, \ ; Total length of Memory Resource Descriptor
01,00,00,00, \ ; ResType_Mem = 0x00000001
01,00, \       ; MD_Count;
14,00, \       ; MD_Type;          // MType_Range = 0x0014
00,00,00,00, \ ; MD_Alloc_Base;
00,00,00,00, \ ; MD_Alloc_End;
00,00, \       ; MD_Flags;
00,00, \       ; MD_Reserved;
00,E0,FF,FF, \ ; MR_Align;         // Mask for base alignment
00,20,00,00, \ ; MR_nBytes;        // Count of bytes
00,00,00,00, \ ; MR_Min;      // Min Address
FF,FF,FF,FF, \ ; MR_Max;      // Max Address
00,00, \       ; MR_Flags;         // Flags
00,00, \       ; MR_Reserved;
02,00,00,00, \ ; PCCARD flags, 0x02 = attribute mem, or
               ;         0x08 = 16-bit common mem
00,00,00,00, \ ; Memory card address
;
; MEM Resource Descriptor 1
;
34,00,00,00, \ ; Total length of Memory Resource Descriptor
01,00,00,00, \ ; ResType_Mem = 0x00000001
01,00, \       ; MD_Count;
14,00, \       ; MD_Type;          // MType_Range = 0x0014
00,00,00,00, \ ; MD_Alloc_Base;
00,00,00,00, \ ; MD_Alloc_End;
00,00, \       ; MD_Flags;
00,00, \       ; MD_Reserved;
00,C0,FF,FF, \ ; MR_Align;         // Mask for base alignment
00,40,00,00, \ ; MR_nBytes;        // Count of bytes
00,00,00,00, \ ; MR_Min;      // Min Address
FF,FF,FF,FF, \ ; MR_Max;      // Max Address
00,00, \       ; MR_Flags;         // Flags
00,00, \       ; MR_Reserved;
08,00,00,00, \ ; PCCARD flags, 0x02 = attribute mem, or
               ;         0x08 = 16-bit common mem
00,40,00,00, \ ; Memory card address
;
; REQUEST_CONFIG_PKT Descriptor
;
19,00,00,00, \ ; Total length of REQUEST_CONFIG_PKT Descriptor
7C,89,00,00, \ ; (ResType_Ignored_Bit + PCCARD_DEVICE_ID) = 0x897C
00,00, \       ; Socket;
02,00, \       ; Attributes;
32, \          ; Vcc;
00, \          ; Vpp1; 78
00, \          ; Vpp2; 78
02, \          ; IntType;
40,10,00,00, \ ; ConfigBase;
00, \          ; Status;
00, \          ; Pin;
00, \          ; Copy;
61, \          ; ConfigIndex;
01, \          ; Present;
;
; TERMINATOR
;
00,00,00,00
;
;
; OVERRIDE for COM4
;
HKR,Override,0006,1, \
;
; CONFIGMG_VERSION
;
00,04,00,00, \
;
; PRIORITY
;
00,30,00,00, \                                               ; x04
;
; I/O Resource Descriptor 0: COM port
;
24,00,00,00, \ ; Total length of I/O Resource Descriptor
02,00,00,00, \ ; ResType_IO = 0x00000002
01,00, \       ; IOD_Count;
0C,00, \       ; IOD_Type;         // IOType_Range = 0x000C
00,00, \       ; IOD_Alloc_Base;
00,00, \       ; IOD_Alloc_End;
00,00, \       ; IOD_DesFlags;
00, \          ; IOD_Alloc_Alias;
00, \          ; IOD_Alloc_Decode;
F8,FF, \       ; IOR_Align;        // Mask for base alignment E0/F0
08,00, \       ; IOR_nPorts;       // Number of ports, pony=10
E8,02, \       ; IOR_Min;          // Min port address
EF,02, \       ; IOR_Max;          // Max port address
00,00, \       ; IOR_RangeFlags;   // Flags
00, \          ; IOR_Alias;        // Alias offset
00, \          ; IOR_Decode;       // Address specified
64,00,00,00, \ ; PCCARD flags, 0x40 = 16-bit port
;
; I/O Resource Descriptor 1 : nice port
;
24,00,00,00, \ ; Total length of I/O Resource Descriptor
02,00,00,00, \ ; ResType_IO = 0x00000002
01,00, \       ; IOD_Count;
0C,00, \       ; IOD_Type;         // IOType_Range = 0x000C
00,00, \       ; IOD_Alloc_Base;
00,00, \       ; IOD_Alloc_End;
00,00, \       ; IOD_DesFlags;
00, \          ; IOD_Alloc_Alias;
00, \          ; IOD_Alloc_Decode;
E0,FF, \       ; IOR_Align;        // Mask for base alignment E0/F0
20,00, \       ; IOR_nPorts;       // Number of ports, pony=10
00,01, \       ; IOR_Min;          // Min port address
FF,FF, \       ; IOR_Max;          // Max port address
00,00, \       ; IOR_RangeFlags;   // Flags
00, \          ; IOR_Alias;        // Alias offset
00, \          ; IOR_Decode;       // Address specified
64,00,00,00, \ ; PCCARD flags, 0x40 = 16-bit port
;
; IRQ Resource Descriptor
;
14,00,00,00, \ ; Total length of IRQ Resource Descriptor
04,00,00,00, \ ; ResType_IRQ = 0x00000004
00,00, \       ; IRQD_Flags;
00,00, \       ; IRQD_Alloc_Num;   // Allocated IRQ number
FF,FF, \       ; IRQD_Req_Mask;    // Mask of possible IRQs
00,00, \       ; IRQD_Reserved;
20,00,00,00, \ ; PCCARD flags, 0x20 = Level mode interrupts
;
; MEM Resource Descriptor 0
;
34,00,00,00, \ ; Total length of Memory Resource Descriptor
01,00,00,00, \ ; ResType_Mem = 0x00000001
01,00, \       ; MD_Count;
14,00, \       ; MD_Type;          // MType_Range = 0x0014
00,00,00,00, \ ; MD_Alloc_Base;
00,00,00,00, \ ; MD_Alloc_End;
00,00, \       ; MD_Flags;
00,00, \       ; MD_Reserved;
00,E0,FF,FF, \ ; MR_Align;         // Mask for base alignment
00,20,00,00, \ ; MR_nBytes;        // Count of bytes
00,00,00,00, \ ; MR_Min;      // Min Address
FF,FF,FF,FF, \ ; MR_Max;      // Max Address
00,00, \       ; MR_Flags;         // Flags
00,00, \       ; MR_Reserved;
02,00,00,00, \ ; PCCARD flags, 0x02 = attribute mem, or
               ;         0x08 = 16-bit common mem
00,00,00,00, \ ; Memory card address
;
; MEM Resource Descriptor 1
;
34,00,00,00, \ ; Total length of Memory Resource Descriptor
01,00,00,00, \ ; ResType_Mem = 0x00000001
01,00, \       ; MD_Count;
14,00, \       ; MD_Type;          // MType_Range = 0x0014
00,00,00,00, \ ; MD_Alloc_Base;
00,00,00,00, \ ; MD_Alloc_End;
00,00, \       ; MD_Flags;
00,00, \       ; MD_Reserved;
00,C0,FF,FF, \ ; MR_Align;         // Mask for base alignment
00,40,00,00, \ ; MR_nBytes;        // Count of bytes
00,00,00,00, \ ; MR_Min;      // Min Address
FF,FF,FF,FF, \ ; MR_Max;      // Max Address
00,00, \       ; MR_Flags;         // Flags
00,00, \       ; MR_Reserved;
08,00,00,00, \ ; PCCARD flags, 0x02 = attribute mem, or
               ;         0x08 = 16-bit common mem
00,40,00,00, \ ; Memory card address
;
; REQUEST_CONFIG_PKT Descriptor
;
19,00,00,00, \ ; Total length of REQUEST_CONFIG_PKT Descriptor
7C,89,00,00, \ ; (ResType_Ignored_Bit + PCCARD_DEVICE_ID) = 0x897C
00,00, \       ; Socket;
02,00, \       ; Attributes;
32, \          ; Vcc;
00, \          ; Vpp1; 78
00, \          ; Vpp2; 78
02, \          ; IntType;
40,10,00,00, \ ; ConfigBase;
00, \          ; Status;
00, \          ; Pin;
00, \          ; Copy;
61, \          ; ConfigIndex;
01, \          ; Present;
;
; TERMINATOR
;
00,00,00,00
;
;
;
; OVERRIDE for COM1
;
HKR,Override,0007,1, \
;
; CONFIGMG_VERSION
;
00,04,00,00, \
;
; PRIORITY
;
00,50,00,00, \                                                   ; x04
;
; I/O Resource Descriptor 0: COM port
;
24,00,00,00, \ ; Total length of I/O Resource Descriptor
02,00,00,00, \ ; ResType_IO = 0x00000002
01,00, \       ; IOD_Count;
0C,00, \       ; IOD_Type;         // IOType_Range = 0x000C
00,00, \       ; IOD_Alloc_Base;
00,00, \       ; IOD_Alloc_End;
00,00, \       ; IOD_DesFlags;
00, \          ; IOD_Alloc_Alias;
00, \          ; IOD_Alloc_Decode;
F8,FF, \       ; IOR_Align;        // Mask for base alignment E0/F0
08,00, \       ; IOR_nPorts;       // Number of ports, pony=10
F8,03, \       ; IOR_Min;          // Min port address
FF,03, \       ; IOR_Max;          // Max port address
00,00, \       ; IOR_RangeFlags;   // Flags
00, \          ; IOR_Alias;        // Alias offset
00, \          ; IOR_Decode;       // Address specified
64,00,00,00, \ ; PCCARD flags, 0x40 = 16-bit port
;
; I/O Resource Descriptor 1 : nice port
;
24,00,00,00, \ ; Total length of I/O Resource Descriptor
02,00,00,00, \ ; ResType_IO = 0x00000002
01,00, \       ; IOD_Count;
0C,00, \       ; IOD_Type;         // IOType_Range = 0x000C
00,00, \       ; IOD_Alloc_Base;
00,00, \       ; IOD_Alloc_End;
00,00, \       ; IOD_DesFlags;
00, \          ; IOD_Alloc_Alias;
00, \          ; IOD_Alloc_Decode;
E0,FF, \       ; IOR_Align;        // Mask for base alignment E0/F0
20,00, \       ; IOR_nPorts;       // Number of ports, pony=10
00,01, \       ; IOR_Min;          // Min port address
FF,FF, \       ; IOR_Max;          // Max port address
00,00, \       ; IOR_RangeFlags;   // Flags
00, \          ; IOR_Alias;        // Alias offset
00, \          ; IOR_Decode;       // Address specified
64,00,00,00, \ ; PCCARD flags, 0x40 = 16-bit port
;
; IRQ Resource Descriptor
;
14,00,00,00, \ ; Total length of IRQ Resource Descriptor
04,00,00,00, \ ; ResType_IRQ = 0x00000004
00,00, \       ; IRQD_Flags;
00,00, \       ; IRQD_Alloc_Num;   // Allocated IRQ number
FF,FF, \       ; IRQD_Req_Mask;    // Mask of possible IRQs
00,00, \       ; IRQD_Reserved;
20,00,00,00, \ ; PCCARD flags, 0x20 = Level mode interrupts
;
; MEM Resource Descriptor 0
;
34,00,00,00, \ ; Total length of Memory Resource Descriptor
01,00,00,00, \ ; ResType_Mem = 0x00000001
01,00, \       ; MD_Count;
14,00, \       ; MD_Type;          // MType_Range = 0x0014
00,00,00,00, \ ; MD_Alloc_Base;
00,00,00,00, \ ; MD_Alloc_End;
00,00, \       ; MD_Flags;
00,00, \       ; MD_Reserved;
00,E0,FF,FF, \ ; MR_Align;         // Mask for base alignment
00,20,00,00, \ ; MR_nBytes;        // Count of bytes
00,00,00,00, \ ; MR_Min;      // Min Address
FF,FF,FF,FF, \ ; MR_Max;      // Max Address
00,00, \       ; MR_Flags;         // Flags
00,00, \       ; MR_Reserved;
02,00,00,00, \ ; PCCARD flags, 0x02 = attribute mem, or
               ;         0x08 = 16-bit common mem
00,00,00,00, \ ; Memory card address
;
; MEM Resource Descriptor 1
;
34,00,00,00, \ ; Total length of Memory Resource Descriptor
01,00,00,00, \ ; ResType_Mem = 0x00000001
01,00, \       ; MD_Count;
14,00, \       ; MD_Type;          // MType_Range = 0x0014
00,00,00,00, \ ; MD_Alloc_Base;
00,00,00,00, \ ; MD_Alloc_End;
00,00, \       ; MD_Flags;
00,00, \       ; MD_Reserved;
00,C0,FF,FF, \ ; MR_Align;         // Mask for base alignment
00,40,00,00, \ ; MR_nBytes;        // Count of bytes
00,00,00,00, \ ; MR_Min;      // Min Address
FF,FF,FF,FF, \ ; MR_Max;      // Max Address
00,00, \       ; MR_Flags;         // Flags
00,00, \       ; MR_Reserved;
08,00,00,00, \ ; PCCARD flags, 0x02 = attribute mem, or
               ;         0x08 = 16-bit common mem
00,40,00,00, \ ; Memory card address
;
; REQUEST_CONFIG_PKT Descriptor
;
19,00,00,00, \ ; Total length of REQUEST_CONFIG_PKT Descriptor
7C,89,00,00, \ ; (ResType_Ignored_Bit + PCCARD_DEVICE_ID) = 0x897C
00,00, \       ; Socket;
02,00, \       ; Attributes;
32, \          ; Vcc;
00, \          ; Vpp1; 78
00, \          ; Vpp2; 78
02, \          ; IntType;
40,10,00,00, \ ; ConfigBase;
00, \          ; Status;
00, \          ; Pin;
00, \          ; Copy;
41, \          ; ConfigIndex;
01, \          ; Present;
;
; TERMINATOR
;
00,00,00,00


[fme.ndis3.CopyFiles]
fme.vxd

[fme.netinf.CopyFiles]                                                                   ;x05
oem_fme.inf,netfme.inf                                                                   ;x05

[DestinationDirs]
fme.ndis3.CopyFiles = 11   ; LDID_SYS
fme.netinf.CopyFiles = 17  ; LDID_INF                                                    ;x05

;
; Translatable strings
;
[Strings]
MS="Microsoft"
;
; Manufacturer names
;
IBM="IBM"
;
; Adapter names
;
fme144ibm="IBM Home and Away 14.4 Credit Card Adapter (Parent)"
fme144oem="14.4 Fax+Modem+Ethernet Combo Card (Parent)"
fme288ibm="IBM Home and Away 28.8 PC_Card (Parent)"
fme288oem="28.8 Fax+Modem+Ethernet Combo Card (Parent)"
